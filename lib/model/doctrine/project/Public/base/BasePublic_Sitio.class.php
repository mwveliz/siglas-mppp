<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Public_Sitio', 'doctrine');

/**
 * BasePublic_Sitio
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $sitio_tipo_id
 * @property string $latitud
 * @property string $longitud
 * @property string $nombre
 * @property string $status
 * @property string $direccion
 * @property boolean $mostrar
 * @property string $color
 * @property integer $id_update
 * @property integer $id_create
 * @property string $ip_update
 * @property string $ip_create
 * @property Public_SitioTipo $Public_SitioTipo
 * 
 * @method integer          getId()               Returns the current record's "id" value
 * @method integer          getSitioTipoId()      Returns the current record's "sitio_tipo_id" value
 * @method string           getLatitud()          Returns the current record's "latitud" value
 * @method string           getLongitud()         Returns the current record's "longitud" value
 * @method string           getNombre()           Returns the current record's "nombre" value
 * @method string           getStatus()           Returns the current record's "status" value
 * @method string           getDireccion()        Returns the current record's "direccion" value
 * @method boolean          getMostrar()          Returns the current record's "mostrar" value
 * @method string           getColor()            Returns the current record's "color" value
 * @method integer          getIdUpdate()         Returns the current record's "id_update" value
 * @method integer          getIdCreate()         Returns the current record's "id_create" value
 * @method string           getIpUpdate()         Returns the current record's "ip_update" value
 * @method string           getIpCreate()         Returns the current record's "ip_create" value
 * @method Public_SitioTipo getPublicSitioTipo()  Returns the current record's "Public_SitioTipo" value
 * @method Public_Sitio     setId()               Sets the current record's "id" value
 * @method Public_Sitio     setSitioTipoId()      Sets the current record's "sitio_tipo_id" value
 * @method Public_Sitio     setLatitud()          Sets the current record's "latitud" value
 * @method Public_Sitio     setLongitud()         Sets the current record's "longitud" value
 * @method Public_Sitio     setNombre()           Sets the current record's "nombre" value
 * @method Public_Sitio     setStatus()           Sets the current record's "status" value
 * @method Public_Sitio     setDireccion()        Sets the current record's "direccion" value
 * @method Public_Sitio     setMostrar()          Sets the current record's "mostrar" value
 * @method Public_Sitio     setColor()            Sets the current record's "color" value
 * @method Public_Sitio     setIdUpdate()         Sets the current record's "id_update" value
 * @method Public_Sitio     setIdCreate()         Sets the current record's "id_create" value
 * @method Public_Sitio     setIpUpdate()         Sets the current record's "ip_update" value
 * @method Public_Sitio     setIpCreate()         Sets the current record's "ip_create" value
 * @method Public_Sitio     setPublicSitioTipo()  Sets the current record's "Public_SitioTipo" value
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePublic_Sitio extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.sitio');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'public.sitio_id',
             'length' => 4,
             ));
        $this->hasColumn('sitio_tipo_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('latitud', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 50,
             ));
        $this->hasColumn('longitud', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 50,
             ));
        $this->hasColumn('nombre', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 50,
             ));
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('direccion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('mostrar', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => 'true',
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('color', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 50,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_create', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('ip_update', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 50,
             ));
        $this->hasColumn('ip_create', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Public_SitioTipo', array(
             'local' => 'sitio_tipo_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}