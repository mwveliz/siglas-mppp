<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Siglas_ServidorConfianza', 'doctrine');

/**
 * BaseSiglas_ServidorConfianza
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $id_yml
 * @property integer $organismo_id
 * @property string $dominio
 * @property string $contacto
 * @property string $io_basica
 * @property string $proteccion
 * @property string $puerta
 * @property string $so
 * @property string $agente
 * @property string $pc
 * @property string $status
 * @property integer $id_create
 * @property integer $id_update
 * @property string $ip_create
 * @property string $ip_update
 * @property Doctrine_Collection $Siglas_ServiciosDisponibles
 * @property Doctrine_Collection $Siglas_ServidorCertificado
 * @property Doctrine_Collection $Siglas_ServiciosPublicadosConfianza
 * @property Doctrine_Collection $Siglas_InteroperabilidadRecibida
 * @property Doctrine_Collection $Siglas_InteroperabilidadEnviada
 * @property Organismos_Organismo $Organismos_Organismo
 * 
 * @method integer                  getId()                                  Returns the current record's "id" value
 * @method string                   getIdYml()                               Returns the current record's "id_yml" value
 * @method integer                  getOrganismoId()                         Returns the current record's "organismo_id" value
 * @method string                   getDominio()                             Returns the current record's "dominio" value
 * @method string                   getContacto()                            Returns the current record's "contacto" value
 * @method string                   getIoBasica()                            Returns the current record's "io_basica" value
 * @method string                   getProteccion()                          Returns the current record's "proteccion" value
 * @method string                   getPuerta()                              Returns the current record's "puerta" value
 * @method string                   getSo()                                  Returns the current record's "so" value
 * @method string                   getAgente()                              Returns the current record's "agente" value
 * @method string                   getPc()                                  Returns the current record's "pc" value
 * @method string                   getStatus()                              Returns the current record's "status" value
 * @method integer                  getIdCreate()                            Returns the current record's "id_create" value
 * @method integer                  getIdUpdate()                            Returns the current record's "id_update" value
 * @method string                   getIpCreate()                            Returns the current record's "ip_create" value
 * @method string                   getIpUpdate()                            Returns the current record's "ip_update" value
 * @method Doctrine_Collection      getSiglasServiciosDisponibles()          Returns the current record's "Siglas_ServiciosDisponibles" collection
 * @method Doctrine_Collection      getSiglasServidorCertificado()           Returns the current record's "Siglas_ServidorCertificado" collection
 * @method Doctrine_Collection      getSiglasServiciosPublicadosConfianza()  Returns the current record's "Siglas_ServiciosPublicadosConfianza" collection
 * @method Doctrine_Collection      getSiglasInteroperabilidadRecibida()     Returns the current record's "Siglas_InteroperabilidadRecibida" collection
 * @method Doctrine_Collection      getSiglasInteroperabilidadEnviada()      Returns the current record's "Siglas_InteroperabilidadEnviada" collection
 * @method Organismos_Organismo     getOrganismosOrganismo()                 Returns the current record's "Organismos_Organismo" value
 * @method Siglas_ServidorConfianza setId()                                  Sets the current record's "id" value
 * @method Siglas_ServidorConfianza setIdYml()                               Sets the current record's "id_yml" value
 * @method Siglas_ServidorConfianza setOrganismoId()                         Sets the current record's "organismo_id" value
 * @method Siglas_ServidorConfianza setDominio()                             Sets the current record's "dominio" value
 * @method Siglas_ServidorConfianza setContacto()                            Sets the current record's "contacto" value
 * @method Siglas_ServidorConfianza setIoBasica()                            Sets the current record's "io_basica" value
 * @method Siglas_ServidorConfianza setProteccion()                          Sets the current record's "proteccion" value
 * @method Siglas_ServidorConfianza setPuerta()                              Sets the current record's "puerta" value
 * @method Siglas_ServidorConfianza setSo()                                  Sets the current record's "so" value
 * @method Siglas_ServidorConfianza setAgente()                              Sets the current record's "agente" value
 * @method Siglas_ServidorConfianza setPc()                                  Sets the current record's "pc" value
 * @method Siglas_ServidorConfianza setStatus()                              Sets the current record's "status" value
 * @method Siglas_ServidorConfianza setIdCreate()                            Sets the current record's "id_create" value
 * @method Siglas_ServidorConfianza setIdUpdate()                            Sets the current record's "id_update" value
 * @method Siglas_ServidorConfianza setIpCreate()                            Sets the current record's "ip_create" value
 * @method Siglas_ServidorConfianza setIpUpdate()                            Sets the current record's "ip_update" value
 * @method Siglas_ServidorConfianza setSiglasServiciosDisponibles()          Sets the current record's "Siglas_ServiciosDisponibles" collection
 * @method Siglas_ServidorConfianza setSiglasServidorCertificado()           Sets the current record's "Siglas_ServidorCertificado" collection
 * @method Siglas_ServidorConfianza setSiglasServiciosPublicadosConfianza()  Sets the current record's "Siglas_ServiciosPublicadosConfianza" collection
 * @method Siglas_ServidorConfianza setSiglasInteroperabilidadRecibida()     Sets the current record's "Siglas_InteroperabilidadRecibida" collection
 * @method Siglas_ServidorConfianza setSiglasInteroperabilidadEnviada()      Sets the current record's "Siglas_InteroperabilidadEnviada" collection
 * @method Siglas_ServidorConfianza setOrganismosOrganismo()                 Sets the current record's "Organismos_Organismo" value
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSiglas_ServidorConfianza extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('siglas.servidor_confianza');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'siglas.servidor_confianza_id',
             'length' => 4,
             ));
        $this->hasColumn('id_yml', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('organismo_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('dominio', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('contacto', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('io_basica', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('proteccion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('puerta', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('so', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('agente', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pc', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('id_create', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('ip_create', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 30,
             ));
        $this->hasColumn('ip_update', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 30,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Siglas_ServiciosDisponibles', array(
             'local' => 'id',
             'foreign' => 'servidor_confianza_id'));

        $this->hasMany('Siglas_ServidorCertificado', array(
             'local' => 'id',
             'foreign' => 'servidor_confianza_id'));

        $this->hasMany('Siglas_ServiciosPublicadosConfianza', array(
             'local' => 'id',
             'foreign' => 'servidor_confianza_id'));

        $this->hasMany('Siglas_InteroperabilidadRecibida', array(
             'local' => 'id',
             'foreign' => 'servidor_confianza_id'));

        $this->hasMany('Siglas_InteroperabilidadEnviada', array(
             'local' => 'id',
             'foreign' => 'servidor_confianza_id'));

        $this->hasOne('Organismos_Organismo', array(
             'local' => 'organismo_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}