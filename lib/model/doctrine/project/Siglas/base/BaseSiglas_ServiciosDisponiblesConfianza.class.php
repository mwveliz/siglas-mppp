<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Siglas_ServiciosDisponiblesConfianza', 'doctrine');

/**
 * BaseSiglas_ServiciosDisponiblesConfianza
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $servicios_disponibles_id
 * @property string $ip_permitida
 * @property string $detalles_maquina
 * @property string $puerta
 * @property string $so
 * @property string $agente
 * @property string $pc
 * @property string $status
 * @property integer $id_create
 * @property integer $id_update
 * @property string $ip_create
 * @property string $ip_update
 * @property Siglas_ServiciosDisponibles $Siglas_ServiciosDisponibles
 * 
 * @method integer                              getId()                          Returns the current record's "id" value
 * @method integer                              getServiciosDisponiblesId()      Returns the current record's "servicios_disponibles_id" value
 * @method string                               getIpPermitida()                 Returns the current record's "ip_permitida" value
 * @method string                               getDetallesMaquina()             Returns the current record's "detalles_maquina" value
 * @method string                               getPuerta()                      Returns the current record's "puerta" value
 * @method string                               getSo()                          Returns the current record's "so" value
 * @method string                               getAgente()                      Returns the current record's "agente" value
 * @method string                               getPc()                          Returns the current record's "pc" value
 * @method string                               getStatus()                      Returns the current record's "status" value
 * @method integer                              getIdCreate()                    Returns the current record's "id_create" value
 * @method integer                              getIdUpdate()                    Returns the current record's "id_update" value
 * @method string                               getIpCreate()                    Returns the current record's "ip_create" value
 * @method string                               getIpUpdate()                    Returns the current record's "ip_update" value
 * @method Siglas_ServiciosDisponibles          getSiglasServiciosDisponibles()  Returns the current record's "Siglas_ServiciosDisponibles" value
 * @method Siglas_ServiciosDisponiblesConfianza setId()                          Sets the current record's "id" value
 * @method Siglas_ServiciosDisponiblesConfianza setServiciosDisponiblesId()      Sets the current record's "servicios_disponibles_id" value
 * @method Siglas_ServiciosDisponiblesConfianza setIpPermitida()                 Sets the current record's "ip_permitida" value
 * @method Siglas_ServiciosDisponiblesConfianza setDetallesMaquina()             Sets the current record's "detalles_maquina" value
 * @method Siglas_ServiciosDisponiblesConfianza setPuerta()                      Sets the current record's "puerta" value
 * @method Siglas_ServiciosDisponiblesConfianza setSo()                          Sets the current record's "so" value
 * @method Siglas_ServiciosDisponiblesConfianza setAgente()                      Sets the current record's "agente" value
 * @method Siglas_ServiciosDisponiblesConfianza setPc()                          Sets the current record's "pc" value
 * @method Siglas_ServiciosDisponiblesConfianza setStatus()                      Sets the current record's "status" value
 * @method Siglas_ServiciosDisponiblesConfianza setIdCreate()                    Sets the current record's "id_create" value
 * @method Siglas_ServiciosDisponiblesConfianza setIdUpdate()                    Sets the current record's "id_update" value
 * @method Siglas_ServiciosDisponiblesConfianza setIpCreate()                    Sets the current record's "ip_create" value
 * @method Siglas_ServiciosDisponiblesConfianza setIpUpdate()                    Sets the current record's "ip_update" value
 * @method Siglas_ServiciosDisponiblesConfianza setSiglasServiciosDisponibles()  Sets the current record's "Siglas_ServiciosDisponibles" value
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSiglas_ServiciosDisponiblesConfianza extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('siglas.servicios_disponibles_confianza');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'siglas.servicios_disponibles_confianza_id',
             'length' => 4,
             ));
        $this->hasColumn('servicios_disponibles_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('ip_permitida', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 60,
             ));
        $this->hasColumn('detalles_maquina', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('puerta', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('so', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('agente', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pc', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('id_create', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('ip_create', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 30,
             ));
        $this->hasColumn('ip_update', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 30,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Siglas_ServiciosDisponibles', array(
             'local' => 'servicios_disponibles_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}