<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Archivo_Almacenamiento', 'doctrine');

/**
 * BaseArchivo_Almacenamiento
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $estante_id
 * @property integer $serie_documental_id
 * @property string $tramos
 * @property integer $id_update
 * @property Archivo_Estante $Archivo_Estante
 * @property Archivo_SerieDocumental $Archivo_SerieDocumental
 * 
 * @method integer                 getId()                      Returns the current record's "id" value
 * @method integer                 getEstanteId()               Returns the current record's "estante_id" value
 * @method integer                 getSerieDocumentalId()       Returns the current record's "serie_documental_id" value
 * @method string                  getTramos()                  Returns the current record's "tramos" value
 * @method integer                 getIdUpdate()                Returns the current record's "id_update" value
 * @method Archivo_Estante         getArchivoEstante()          Returns the current record's "Archivo_Estante" value
 * @method Archivo_SerieDocumental getArchivoSerieDocumental()  Returns the current record's "Archivo_SerieDocumental" value
 * @method Archivo_Almacenamiento  setId()                      Sets the current record's "id" value
 * @method Archivo_Almacenamiento  setEstanteId()               Sets the current record's "estante_id" value
 * @method Archivo_Almacenamiento  setSerieDocumentalId()       Sets the current record's "serie_documental_id" value
 * @method Archivo_Almacenamiento  setTramos()                  Sets the current record's "tramos" value
 * @method Archivo_Almacenamiento  setIdUpdate()                Sets the current record's "id_update" value
 * @method Archivo_Almacenamiento  setArchivoEstante()          Sets the current record's "Archivo_Estante" value
 * @method Archivo_Almacenamiento  setArchivoSerieDocumental()  Sets the current record's "Archivo_SerieDocumental" value
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArchivo_Almacenamiento extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('archivo.almacenamiento');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'archivo.almacenamiento_id',
             'length' => 4,
             ));
        $this->hasColumn('estante_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('serie_documental_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('tramos', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Archivo_Estante', array(
             'local' => 'estante_id',
             'foreign' => 'id'));

        $this->hasOne('Archivo_SerieDocumental', array(
             'local' => 'serie_documental_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}