<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Archivo_Clasificador', 'doctrine');

/**
 * BaseArchivo_Clasificador
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $serie_documental_id
 * @property string $nombre
 * @property string $tipo_dato
 * @property string $parametros
 * @property boolean $vacio
 * @property integer $orden
 * @property integer $id_update
 * @property Archivo_SerieDocumental $Archivo_SerieDocumental
 * @property Doctrine_Collection $Archivo_ExpedienteClasificador
 * 
 * @method integer                 getId()                             Returns the current record's "id" value
 * @method integer                 getSerieDocumentalId()              Returns the current record's "serie_documental_id" value
 * @method string                  getNombre()                         Returns the current record's "nombre" value
 * @method string                  getTipoDato()                       Returns the current record's "tipo_dato" value
 * @method string                  getParametros()                     Returns the current record's "parametros" value
 * @method boolean                 getVacio()                          Returns the current record's "vacio" value
 * @method integer                 getOrden()                          Returns the current record's "orden" value
 * @method integer                 getIdUpdate()                       Returns the current record's "id_update" value
 * @method Archivo_SerieDocumental getArchivoSerieDocumental()         Returns the current record's "Archivo_SerieDocumental" value
 * @method Doctrine_Collection     getArchivoExpedienteClasificador()  Returns the current record's "Archivo_ExpedienteClasificador" collection
 * @method Archivo_Clasificador    setId()                             Sets the current record's "id" value
 * @method Archivo_Clasificador    setSerieDocumentalId()              Sets the current record's "serie_documental_id" value
 * @method Archivo_Clasificador    setNombre()                         Sets the current record's "nombre" value
 * @method Archivo_Clasificador    setTipoDato()                       Sets the current record's "tipo_dato" value
 * @method Archivo_Clasificador    setParametros()                     Sets the current record's "parametros" value
 * @method Archivo_Clasificador    setVacio()                          Sets the current record's "vacio" value
 * @method Archivo_Clasificador    setOrden()                          Sets the current record's "orden" value
 * @method Archivo_Clasificador    setIdUpdate()                       Sets the current record's "id_update" value
 * @method Archivo_Clasificador    setArchivoSerieDocumental()         Sets the current record's "Archivo_SerieDocumental" value
 * @method Archivo_Clasificador    setArchivoExpedienteClasificador()  Sets the current record's "Archivo_ExpedienteClasificador" collection
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArchivo_Clasificador extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('archivo.clasificador');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'archivo.clasificador_id',
             'length' => 4,
             ));
        $this->hasColumn('serie_documental_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('tipo_dato', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('parametros', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('vacio', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('orden', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Archivo_SerieDocumental', array(
             'local' => 'serie_documental_id',
             'foreign' => 'id'));

        $this->hasMany('Archivo_ExpedienteClasificador', array(
             'local' => 'id',
             'foreign' => 'clasificador_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}