<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Archivo_CuerpoDocumental', 'doctrine');

/**
 * BaseArchivo_CuerpoDocumental
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $padre_id
 * @property integer $serie_documental_id
 * @property string $nombre
 * @property integer $orden
 * @property integer $id_update
 * @property Archivo_SerieDocumental $Archivo_SerieDocumental
 * @property Archivo_CuerpoDocumental $Archivo_CuerpoDocumental
 * @property Doctrine_Collection $Archivo_CuerpoDocumental_ForPadre
 * @property Doctrine_Collection $Archivo_TipologiaDocumental
 * @property Doctrine_Collection $Archivo_ExpedienteCuerpoDocumental
 * 
 * @method integer                  getId()                                 Returns the current record's "id" value
 * @method integer                  getPadreId()                            Returns the current record's "padre_id" value
 * @method integer                  getSerieDocumentalId()                  Returns the current record's "serie_documental_id" value
 * @method string                   getNombre()                             Returns the current record's "nombre" value
 * @method integer                  getOrden()                              Returns the current record's "orden" value
 * @method integer                  getIdUpdate()                           Returns the current record's "id_update" value
 * @method Archivo_SerieDocumental  getArchivoSerieDocumental()             Returns the current record's "Archivo_SerieDocumental" value
 * @method Archivo_CuerpoDocumental getArchivoCuerpoDocumental()            Returns the current record's "Archivo_CuerpoDocumental" value
 * @method Doctrine_Collection      getArchivoCuerpoDocumentalForPadre()    Returns the current record's "Archivo_CuerpoDocumental_ForPadre" collection
 * @method Doctrine_Collection      getArchivoTipologiaDocumental()         Returns the current record's "Archivo_TipologiaDocumental" collection
 * @method Doctrine_Collection      getArchivoExpedienteCuerpoDocumental()  Returns the current record's "Archivo_ExpedienteCuerpoDocumental" collection
 * @method Archivo_CuerpoDocumental setId()                                 Sets the current record's "id" value
 * @method Archivo_CuerpoDocumental setPadreId()                            Sets the current record's "padre_id" value
 * @method Archivo_CuerpoDocumental setSerieDocumentalId()                  Sets the current record's "serie_documental_id" value
 * @method Archivo_CuerpoDocumental setNombre()                             Sets the current record's "nombre" value
 * @method Archivo_CuerpoDocumental setOrden()                              Sets the current record's "orden" value
 * @method Archivo_CuerpoDocumental setIdUpdate()                           Sets the current record's "id_update" value
 * @method Archivo_CuerpoDocumental setArchivoSerieDocumental()             Sets the current record's "Archivo_SerieDocumental" value
 * @method Archivo_CuerpoDocumental setArchivoCuerpoDocumental()            Sets the current record's "Archivo_CuerpoDocumental" value
 * @method Archivo_CuerpoDocumental setArchivoCuerpoDocumentalForPadre()    Sets the current record's "Archivo_CuerpoDocumental_ForPadre" collection
 * @method Archivo_CuerpoDocumental setArchivoTipologiaDocumental()         Sets the current record's "Archivo_TipologiaDocumental" collection
 * @method Archivo_CuerpoDocumental setArchivoExpedienteCuerpoDocumental()  Sets the current record's "Archivo_ExpedienteCuerpoDocumental" collection
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArchivo_CuerpoDocumental extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('archivo.cuerpo_documental');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'archivo.cuerpo_documental_id',
             'length' => 4,
             ));
        $this->hasColumn('padre_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('serie_documental_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('orden', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Archivo_SerieDocumental', array(
             'local' => 'serie_documental_id',
             'foreign' => 'id'));

        $this->hasOne('Archivo_CuerpoDocumental', array(
             'local' => 'padre_id',
             'foreign' => 'id'));

        $this->hasMany('Archivo_CuerpoDocumental as Archivo_CuerpoDocumental_ForPadre', array(
             'local' => 'id',
             'foreign' => 'padre_id'));

        $this->hasMany('Archivo_TipologiaDocumental', array(
             'local' => 'id',
             'foreign' => 'cuerpo_documental_id'));

        $this->hasMany('Archivo_ExpedienteCuerpoDocumental', array(
             'local' => 'id',
             'foreign' => 'cuerpo_documental_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}