<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Correspondencia_FuncionarioUnidad', 'doctrine');

/**
 * BaseCorrespondencia_FuncionarioUnidad
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $autorizada_unidad_id
 * @property integer $funcionario_id
 * @property integer $dependencia_unidad_id
 * @property boolean $redactar
 * @property boolean $leer
 * @property boolean $firmar
 * @property boolean $recibir
 * @property boolean $permitido
 * @property string $permitido_funcionario
 * @property boolean $administrar
 * @property string $status
 * @property timestamp $deleted_at
 * @property integer $id_update
 * @property Organigrama_Unidad $Organigrama_Unidad
 * @property Funcionarios_Funcionario $Funcionarios_Funcionario
 * @property Doctrine_Collection $Correspondencia_VistobuenoConfig
 * 
 * @method integer                           getId()                               Returns the current record's "id" value
 * @method integer                           getAutorizadaUnidadId()               Returns the current record's "autorizada_unidad_id" value
 * @method integer                           getFuncionarioId()                    Returns the current record's "funcionario_id" value
 * @method integer                           getDependenciaUnidadId()              Returns the current record's "dependencia_unidad_id" value
 * @method boolean                           getRedactar()                         Returns the current record's "redactar" value
 * @method boolean                           getLeer()                             Returns the current record's "leer" value
 * @method boolean                           getFirmar()                           Returns the current record's "firmar" value
 * @method boolean                           getRecibir()                          Returns the current record's "recibir" value
 * @method boolean                           getPermitido()                        Returns the current record's "permitido" value
 * @method string                            getPermitidoFuncionario()             Returns the current record's "permitido_funcionario" value
 * @method boolean                           getAdministrar()                      Returns the current record's "administrar" value
 * @method string                            getStatus()                           Returns the current record's "status" value
 * @method timestamp                         getDeletedAt()                        Returns the current record's "deleted_at" value
 * @method integer                           getIdUpdate()                         Returns the current record's "id_update" value
 * @method Organigrama_Unidad                getOrganigramaUnidad()                Returns the current record's "Organigrama_Unidad" value
 * @method Funcionarios_Funcionario          getFuncionariosFuncionario()          Returns the current record's "Funcionarios_Funcionario" value
 * @method Doctrine_Collection               getCorrespondenciaVistobuenoConfig()  Returns the current record's "Correspondencia_VistobuenoConfig" collection
 * @method Correspondencia_FuncionarioUnidad setId()                               Sets the current record's "id" value
 * @method Correspondencia_FuncionarioUnidad setAutorizadaUnidadId()               Sets the current record's "autorizada_unidad_id" value
 * @method Correspondencia_FuncionarioUnidad setFuncionarioId()                    Sets the current record's "funcionario_id" value
 * @method Correspondencia_FuncionarioUnidad setDependenciaUnidadId()              Sets the current record's "dependencia_unidad_id" value
 * @method Correspondencia_FuncionarioUnidad setRedactar()                         Sets the current record's "redactar" value
 * @method Correspondencia_FuncionarioUnidad setLeer()                             Sets the current record's "leer" value
 * @method Correspondencia_FuncionarioUnidad setFirmar()                           Sets the current record's "firmar" value
 * @method Correspondencia_FuncionarioUnidad setRecibir()                          Sets the current record's "recibir" value
 * @method Correspondencia_FuncionarioUnidad setPermitido()                        Sets the current record's "permitido" value
 * @method Correspondencia_FuncionarioUnidad setPermitidoFuncionario()             Sets the current record's "permitido_funcionario" value
 * @method Correspondencia_FuncionarioUnidad setAdministrar()                      Sets the current record's "administrar" value
 * @method Correspondencia_FuncionarioUnidad setStatus()                           Sets the current record's "status" value
 * @method Correspondencia_FuncionarioUnidad setDeletedAt()                        Sets the current record's "deleted_at" value
 * @method Correspondencia_FuncionarioUnidad setIdUpdate()                         Sets the current record's "id_update" value
 * @method Correspondencia_FuncionarioUnidad setOrganigramaUnidad()                Sets the current record's "Organigrama_Unidad" value
 * @method Correspondencia_FuncionarioUnidad setFuncionariosFuncionario()          Sets the current record's "Funcionarios_Funcionario" value
 * @method Correspondencia_FuncionarioUnidad setCorrespondenciaVistobuenoConfig()  Sets the current record's "Correspondencia_VistobuenoConfig" collection
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCorrespondencia_FuncionarioUnidad extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('correspondencia.funcionario_unidad');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'correspondencia.funcionario_unidad_id',
             'length' => 4,
             ));
        $this->hasColumn('autorizada_unidad_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('funcionario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('dependencia_unidad_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('redactar', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('leer', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('firmar', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('recibir', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('permitido', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('permitido_funcionario', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 50,
             ));
        $this->hasColumn('administrar', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Organigrama_Unidad', array(
             'local' => 'autorizada_unidad_id',
             'foreign' => 'id'));

        $this->hasOne('Funcionarios_Funcionario', array(
             'local' => 'funcionario_id',
             'foreign' => 'id'));

        $this->hasMany('Correspondencia_VistobuenoConfig', array(
             'local' => 'id',
             'foreign' => 'funcionario_unidad_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}