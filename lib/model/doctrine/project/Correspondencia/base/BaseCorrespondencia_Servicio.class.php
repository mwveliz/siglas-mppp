<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Correspondencia_Servicio', 'doctrine');

/**
 * BaseCorrespondencia_Servicio
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $unidad_id
 * @property string $descripcion
 * @property integer $id_update
 * @property string $ip_update
 * @property Organigrama_Unidad $Organigrama_Unidad
 * @property Doctrine_Collection $Correspondencia_RedireccionAutomatica
 * 
 * @method integer                  getId()                                    Returns the current record's "id" value
 * @method integer                  getUnidadId()                              Returns the current record's "unidad_id" value
 * @method string                   getDescripcion()                           Returns the current record's "descripcion" value
 * @method integer                  getIdUpdate()                              Returns the current record's "id_update" value
 * @method string                   getIpUpdate()                              Returns the current record's "ip_update" value
 * @method Organigrama_Unidad       getOrganigramaUnidad()                     Returns the current record's "Organigrama_Unidad" value
 * @method Doctrine_Collection      getCorrespondenciaRedireccionAutomatica()  Returns the current record's "Correspondencia_RedireccionAutomatica" collection
 * @method Correspondencia_Servicio setId()                                    Sets the current record's "id" value
 * @method Correspondencia_Servicio setUnidadId()                              Sets the current record's "unidad_id" value
 * @method Correspondencia_Servicio setDescripcion()                           Sets the current record's "descripcion" value
 * @method Correspondencia_Servicio setIdUpdate()                              Sets the current record's "id_update" value
 * @method Correspondencia_Servicio setIpUpdate()                              Sets the current record's "ip_update" value
 * @method Correspondencia_Servicio setOrganigramaUnidad()                     Sets the current record's "Organigrama_Unidad" value
 * @method Correspondencia_Servicio setCorrespondenciaRedireccionAutomatica()  Sets the current record's "Correspondencia_RedireccionAutomatica" collection
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCorrespondencia_Servicio extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('correspondencia.servicio');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'correspondencia.servicio_id',
             'length' => 4,
             ));
        $this->hasColumn('unidad_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('descripcion', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('ip_update', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Organigrama_Unidad', array(
             'local' => 'unidad_id',
             'foreign' => 'id'));

        $this->hasMany('Correspondencia_RedireccionAutomatica', array(
             'local' => 'id',
             'foreign' => 'servicio_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}