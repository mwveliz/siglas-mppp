<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Correspondencia_VistobuenoGeneralConfig', 'doctrine');

/**
 * BaseCorrespondencia_VistobuenoGeneralConfig
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property string $descripcion
 * @property integer $tipo_formato_id
 * @property string $status
 * @property integer $id_update
 * @property integer $id_create
 * @property string $ip_update
 * @property string $ip_create
 * @property Correspondencia_TipoFormato $Correspondencia_TipoFormato
 * @property Doctrine_Collection $Correspondencia_VistobuenoGeneral
 * 
 * @method integer                                 getId()                                Returns the current record's "id" value
 * @method string                                  getNombre()                            Returns the current record's "nombre" value
 * @method string                                  getDescripcion()                       Returns the current record's "descripcion" value
 * @method integer                                 getTipoFormatoId()                     Returns the current record's "tipo_formato_id" value
 * @method string                                  getStatus()                            Returns the current record's "status" value
 * @method integer                                 getIdUpdate()                          Returns the current record's "id_update" value
 * @method integer                                 getIdCreate()                          Returns the current record's "id_create" value
 * @method string                                  getIpUpdate()                          Returns the current record's "ip_update" value
 * @method string                                  getIpCreate()                          Returns the current record's "ip_create" value
 * @method Correspondencia_TipoFormato             getCorrespondenciaTipoFormato()        Returns the current record's "Correspondencia_TipoFormato" value
 * @method Doctrine_Collection                     getCorrespondenciaVistobuenoGeneral()  Returns the current record's "Correspondencia_VistobuenoGeneral" collection
 * @method Correspondencia_VistobuenoGeneralConfig setId()                                Sets the current record's "id" value
 * @method Correspondencia_VistobuenoGeneralConfig setNombre()                            Sets the current record's "nombre" value
 * @method Correspondencia_VistobuenoGeneralConfig setDescripcion()                       Sets the current record's "descripcion" value
 * @method Correspondencia_VistobuenoGeneralConfig setTipoFormatoId()                     Sets the current record's "tipo_formato_id" value
 * @method Correspondencia_VistobuenoGeneralConfig setStatus()                            Sets the current record's "status" value
 * @method Correspondencia_VistobuenoGeneralConfig setIdUpdate()                          Sets the current record's "id_update" value
 * @method Correspondencia_VistobuenoGeneralConfig setIdCreate()                          Sets the current record's "id_create" value
 * @method Correspondencia_VistobuenoGeneralConfig setIpUpdate()                          Sets the current record's "ip_update" value
 * @method Correspondencia_VistobuenoGeneralConfig setIpCreate()                          Sets the current record's "ip_create" value
 * @method Correspondencia_VistobuenoGeneralConfig setCorrespondenciaTipoFormato()        Sets the current record's "Correspondencia_TipoFormato" value
 * @method Correspondencia_VistobuenoGeneralConfig setCorrespondenciaVistobuenoGeneral()  Sets the current record's "Correspondencia_VistobuenoGeneral" collection
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCorrespondencia_VistobuenoGeneralConfig extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('correspondencia.vistobueno_general_config');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'correspondencia.vistobueno_general_config_id',
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('tipo_formato_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_create', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('ip_update', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 50,
             ));
        $this->hasColumn('ip_create', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Correspondencia_TipoFormato', array(
             'local' => 'tipo_formato_id',
             'foreign' => 'id'));

        $this->hasMany('Correspondencia_VistobuenoGeneral', array(
             'local' => 'id',
             'foreign' => 'vistobueno_general_config_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}