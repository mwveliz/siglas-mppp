<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Correspondencia_MicroForo', 'doctrine');

/**
 * BaseCorrespondencia_MicroForo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $correspondencia_grupo
 * @property string $contenido
 * @property integer $id_update
 * @property integer $funcionario_id
 * @property integer $unidad_id
 * @property Organigrama_Unidad $Organigrama_Unidad
 * @property Funcionarios_Funcionario $Funcionarios_Funcionario
 * 
 * @method integer                   getId()                       Returns the current record's "id" value
 * @method integer                   getCorrespondenciaGrupo()     Returns the current record's "correspondencia_grupo" value
 * @method string                    getContenido()                Returns the current record's "contenido" value
 * @method integer                   getIdUpdate()                 Returns the current record's "id_update" value
 * @method integer                   getFuncionarioId()            Returns the current record's "funcionario_id" value
 * @method integer                   getUnidadId()                 Returns the current record's "unidad_id" value
 * @method Organigrama_Unidad        getOrganigramaUnidad()        Returns the current record's "Organigrama_Unidad" value
 * @method Funcionarios_Funcionario  getFuncionariosFuncionario()  Returns the current record's "Funcionarios_Funcionario" value
 * @method Correspondencia_MicroForo setId()                       Sets the current record's "id" value
 * @method Correspondencia_MicroForo setCorrespondenciaGrupo()     Sets the current record's "correspondencia_grupo" value
 * @method Correspondencia_MicroForo setContenido()                Sets the current record's "contenido" value
 * @method Correspondencia_MicroForo setIdUpdate()                 Sets the current record's "id_update" value
 * @method Correspondencia_MicroForo setFuncionarioId()            Sets the current record's "funcionario_id" value
 * @method Correspondencia_MicroForo setUnidadId()                 Sets the current record's "unidad_id" value
 * @method Correspondencia_MicroForo setOrganigramaUnidad()        Sets the current record's "Organigrama_Unidad" value
 * @method Correspondencia_MicroForo setFuncionariosFuncionario()  Sets the current record's "Funcionarios_Funcionario" value
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCorrespondencia_MicroForo extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('correspondencia.micro_foro');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'correspondencia.micro_foro_id',
             'length' => 4,
             ));
        $this->hasColumn('correspondencia_grupo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('contenido', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('funcionario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('unidad_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Organigrama_Unidad', array(
             'local' => 'unidad_id',
             'foreign' => 'id'));

        $this->hasOne('Funcionarios_Funcionario', array(
             'local' => 'funcionario_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}