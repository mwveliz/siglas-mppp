<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Correspondencia_UltimaVista', 'doctrine');

/**
 * BaseCorrespondencia_UltimaVista
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $funcionario_id
 * @property integer $correspondencia_enviada_id
 * @property integer $correspondencia_recibida_id
 * @property integer $correspondencia_externa_id
 * @property Funcionarios_Funcionario $Funcionarios_Funcionario
 * @property Correspondencia_Correspondencia $Correspondencia_UltimaVistaRecibida
 * @property Correspondencia_Correspondencia $Correspondencia_UltimaVistaEnviada
 * @property Correspondencia_Correspondencia $Correspondencia_UltimaVistaExterna
 * 
 * @method integer                         getId()                                  Returns the current record's "id" value
 * @method integer                         getFuncionarioId()                       Returns the current record's "funcionario_id" value
 * @method integer                         getCorrespondenciaEnviadaId()            Returns the current record's "correspondencia_enviada_id" value
 * @method integer                         getCorrespondenciaRecibidaId()           Returns the current record's "correspondencia_recibida_id" value
 * @method integer                         getCorrespondenciaExternaId()            Returns the current record's "correspondencia_externa_id" value
 * @method Funcionarios_Funcionario        getFuncionariosFuncionario()             Returns the current record's "Funcionarios_Funcionario" value
 * @method Correspondencia_Correspondencia getCorrespondenciaUltimaVistaRecibida()  Returns the current record's "Correspondencia_UltimaVistaRecibida" value
 * @method Correspondencia_Correspondencia getCorrespondenciaUltimaVistaEnviada()   Returns the current record's "Correspondencia_UltimaVistaEnviada" value
 * @method Correspondencia_Correspondencia getCorrespondenciaUltimaVistaExterna()   Returns the current record's "Correspondencia_UltimaVistaExterna" value
 * @method Correspondencia_UltimaVista     setId()                                  Sets the current record's "id" value
 * @method Correspondencia_UltimaVista     setFuncionarioId()                       Sets the current record's "funcionario_id" value
 * @method Correspondencia_UltimaVista     setCorrespondenciaEnviadaId()            Sets the current record's "correspondencia_enviada_id" value
 * @method Correspondencia_UltimaVista     setCorrespondenciaRecibidaId()           Sets the current record's "correspondencia_recibida_id" value
 * @method Correspondencia_UltimaVista     setCorrespondenciaExternaId()            Sets the current record's "correspondencia_externa_id" value
 * @method Correspondencia_UltimaVista     setFuncionariosFuncionario()             Sets the current record's "Funcionarios_Funcionario" value
 * @method Correspondencia_UltimaVista     setCorrespondenciaUltimaVistaRecibida()  Sets the current record's "Correspondencia_UltimaVistaRecibida" value
 * @method Correspondencia_UltimaVista     setCorrespondenciaUltimaVistaEnviada()   Sets the current record's "Correspondencia_UltimaVistaEnviada" value
 * @method Correspondencia_UltimaVista     setCorrespondenciaUltimaVistaExterna()   Sets the current record's "Correspondencia_UltimaVistaExterna" value
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCorrespondencia_UltimaVista extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('correspondencia.ultima_vista');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'correspondencia.ultima_vista_id',
             'length' => 4,
             ));
        $this->hasColumn('funcionario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('correspondencia_enviada_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('correspondencia_recibida_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('correspondencia_externa_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Funcionarios_Funcionario', array(
             'local' => 'funcionario_id',
             'foreign' => 'id'));

        $this->hasOne('Correspondencia_Correspondencia as Correspondencia_UltimaVistaRecibida', array(
             'local' => 'correspondencia_recibida_id',
             'foreign' => 'id'));

        $this->hasOne('Correspondencia_Correspondencia as Correspondencia_UltimaVistaEnviada', array(
             'local' => 'correspondencia_enviada_id',
             'foreign' => 'id'));

        $this->hasOne('Correspondencia_Correspondencia as Correspondencia_UltimaVistaExterna', array(
             'local' => 'correspondencia_externa_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}