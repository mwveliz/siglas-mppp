<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Correspondencia_FuncionarioCorrelativo', 'doctrine');

/**
 * BaseCorrespondencia_FuncionarioCorrelativo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $funcionario_id
 * @property string $ultimo_correlativo
 * @property string $nomenclador
 * @property integer $secuencia
 * @property string $status
 * @property integer $id_update
 * @property Funcionarios_Funcionario $Funcionarios_Funcionario
 * @property Doctrine_Collection $Correspondencia_Correspondencia
 * 
 * @method integer                                getId()                              Returns the current record's "id" value
 * @method integer                                getFuncionarioId()                   Returns the current record's "funcionario_id" value
 * @method string                                 getUltimoCorrelativo()               Returns the current record's "ultimo_correlativo" value
 * @method string                                 getNomenclador()                     Returns the current record's "nomenclador" value
 * @method integer                                getSecuencia()                       Returns the current record's "secuencia" value
 * @method string                                 getStatus()                          Returns the current record's "status" value
 * @method integer                                getIdUpdate()                        Returns the current record's "id_update" value
 * @method Funcionarios_Funcionario               getFuncionariosFuncionario()         Returns the current record's "Funcionarios_Funcionario" value
 * @method Doctrine_Collection                    getCorrespondenciaCorrespondencia()  Returns the current record's "Correspondencia_Correspondencia" collection
 * @method Correspondencia_FuncionarioCorrelativo setId()                              Sets the current record's "id" value
 * @method Correspondencia_FuncionarioCorrelativo setFuncionarioId()                   Sets the current record's "funcionario_id" value
 * @method Correspondencia_FuncionarioCorrelativo setUltimoCorrelativo()               Sets the current record's "ultimo_correlativo" value
 * @method Correspondencia_FuncionarioCorrelativo setNomenclador()                     Sets the current record's "nomenclador" value
 * @method Correspondencia_FuncionarioCorrelativo setSecuencia()                       Sets the current record's "secuencia" value
 * @method Correspondencia_FuncionarioCorrelativo setStatus()                          Sets the current record's "status" value
 * @method Correspondencia_FuncionarioCorrelativo setIdUpdate()                        Sets the current record's "id_update" value
 * @method Correspondencia_FuncionarioCorrelativo setFuncionariosFuncionario()         Sets the current record's "Funcionarios_Funcionario" value
 * @method Correspondencia_FuncionarioCorrelativo setCorrespondenciaCorrespondencia()  Sets the current record's "Correspondencia_Correspondencia" collection
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCorrespondencia_FuncionarioCorrelativo extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('correspondencia.funcionario_correlativo');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'correspondencia.funcionario_correlativo_id',
             'length' => 4,
             ));
        $this->hasColumn('funcionario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('ultimo_correlativo', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('nomenclador', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 100,
             ));
        $this->hasColumn('secuencia', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Funcionarios_Funcionario', array(
             'local' => 'funcionario_id',
             'foreign' => 'id'));

        $this->hasMany('Correspondencia_Correspondencia', array(
             'local' => 'id',
             'foreign' => 'funcionario_correlativo_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}