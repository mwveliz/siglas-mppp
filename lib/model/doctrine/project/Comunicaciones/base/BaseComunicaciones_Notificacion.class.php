<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Comunicaciones_Notificacion', 'doctrine');

/**
 * BaseComunicaciones_Notificacion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $funcionario_id
 * @property integer $aplicacion_id
 * @property string $forma_entrega
 * @property integer $metodo_id
 * @property timestamp $f_entrega
 * @property string $parametros
 * @property string $mensaje
 * @property integer $status
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property string $id_update
 * @property string $ip_update
 * @property Acceso_Aplicacion $Acceso_Aplicacion
 * @property Comunicaciones_Metodo $Comunicaciones_Metodo
 * 
 * @method integer                     getId()                    Returns the current record's "id" value
 * @method integer                     getFuncionarioId()         Returns the current record's "funcionario_id" value
 * @method integer                     getAplicacionId()          Returns the current record's "aplicacion_id" value
 * @method string                      getFormaEntrega()          Returns the current record's "forma_entrega" value
 * @method integer                     getMetodoId()              Returns the current record's "metodo_id" value
 * @method timestamp                   getFEntrega()              Returns the current record's "f_entrega" value
 * @method string                      getParametros()            Returns the current record's "parametros" value
 * @method string                      getMensaje()               Returns the current record's "mensaje" value
 * @method integer                     getStatus()                Returns the current record's "status" value
 * @method timestamp                   getCreatedAt()             Returns the current record's "created_at" value
 * @method timestamp                   getUpdatedAt()             Returns the current record's "updated_at" value
 * @method string                      getIdUpdate()              Returns the current record's "id_update" value
 * @method string                      getIpUpdate()              Returns the current record's "ip_update" value
 * @method Acceso_Aplicacion           getAccesoAplicacion()      Returns the current record's "Acceso_Aplicacion" value
 * @method Comunicaciones_Metodo       getComunicacionesMetodo()  Returns the current record's "Comunicaciones_Metodo" value
 * @method Comunicaciones_Notificacion setId()                    Sets the current record's "id" value
 * @method Comunicaciones_Notificacion setFuncionarioId()         Sets the current record's "funcionario_id" value
 * @method Comunicaciones_Notificacion setAplicacionId()          Sets the current record's "aplicacion_id" value
 * @method Comunicaciones_Notificacion setFormaEntrega()          Sets the current record's "forma_entrega" value
 * @method Comunicaciones_Notificacion setMetodoId()              Sets the current record's "metodo_id" value
 * @method Comunicaciones_Notificacion setFEntrega()              Sets the current record's "f_entrega" value
 * @method Comunicaciones_Notificacion setParametros()            Sets the current record's "parametros" value
 * @method Comunicaciones_Notificacion setMensaje()               Sets the current record's "mensaje" value
 * @method Comunicaciones_Notificacion setStatus()                Sets the current record's "status" value
 * @method Comunicaciones_Notificacion setCreatedAt()             Sets the current record's "created_at" value
 * @method Comunicaciones_Notificacion setUpdatedAt()             Sets the current record's "updated_at" value
 * @method Comunicaciones_Notificacion setIdUpdate()              Sets the current record's "id_update" value
 * @method Comunicaciones_Notificacion setIpUpdate()              Sets the current record's "ip_update" value
 * @method Comunicaciones_Notificacion setAccesoAplicacion()      Sets the current record's "Acceso_Aplicacion" value
 * @method Comunicaciones_Notificacion setComunicacionesMetodo()  Sets the current record's "Comunicaciones_Metodo" value
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComunicaciones_Notificacion extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comunicaciones.notificacion');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'comunicaciones.notificacion_id',
             'length' => 4,
             ));
        $this->hasColumn('funcionario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('aplicacion_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('forma_entrega', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 15,
             ));
        $this->hasColumn('metodo_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('f_entrega', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('parametros', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('mensaje', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_update', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 50,
             ));
        $this->hasColumn('ip_update', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 30,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Acceso_Aplicacion', array(
             'local' => 'aplicacion_id',
             'foreign' => 'id'));

        $this->hasOne('Comunicaciones_Metodo', array(
             'local' => 'metodo_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}