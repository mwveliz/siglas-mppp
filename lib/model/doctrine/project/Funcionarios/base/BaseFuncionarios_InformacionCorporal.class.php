<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Funcionarios_InformacionCorporal', 'doctrine');

/**
 * BaseFuncionarios_InformacionCorporal
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $funcionario_id
 * @property string $color_ojos
 * @property string $color_cabello
 * @property string $color_piel
 * @property decimal $peso
 * @property decimal $altura
 * @property string $talla_camisa
 * @property string $talla_pantalon
 * @property string $talla_calzado
 * @property string $talla_gorra
 * @property string $tipo_sangre
 * @property string $lentes_formula
 * @property timestamp $f_validado
 * @property integer $id_validado
 * @property string $status
 * @property integer $id_update
 * @property string $ip_update
 * @property string $proteccion
 * @property Funcionarios_Funcionario $Funcionarios_Funcionario
 * 
 * @method integer                          getId()                       Returns the current record's "id" value
 * @method integer                          getFuncionarioId()            Returns the current record's "funcionario_id" value
 * @method string                           getColorOjos()                Returns the current record's "color_ojos" value
 * @method string                           getColorCabello()             Returns the current record's "color_cabello" value
 * @method string                           getColorPiel()                Returns the current record's "color_piel" value
 * @method decimal                          getPeso()                     Returns the current record's "peso" value
 * @method decimal                          getAltura()                   Returns the current record's "altura" value
 * @method string                           getTallaCamisa()              Returns the current record's "talla_camisa" value
 * @method string                           getTallaPantalon()            Returns the current record's "talla_pantalon" value
 * @method string                           getTallaCalzado()             Returns the current record's "talla_calzado" value
 * @method string                           getTallaGorra()               Returns the current record's "talla_gorra" value
 * @method string                           getTipoSangre()               Returns the current record's "tipo_sangre" value
 * @method string                           getLentesFormula()            Returns the current record's "lentes_formula" value
 * @method timestamp                        getFValidado()                Returns the current record's "f_validado" value
 * @method integer                          getIdValidado()               Returns the current record's "id_validado" value
 * @method string                           getStatus()                   Returns the current record's "status" value
 * @method integer                          getIdUpdate()                 Returns the current record's "id_update" value
 * @method string                           getIpUpdate()                 Returns the current record's "ip_update" value
 * @method string                           getProteccion()               Returns the current record's "proteccion" value
 * @method Funcionarios_Funcionario         getFuncionariosFuncionario()  Returns the current record's "Funcionarios_Funcionario" value
 * @method Funcionarios_InformacionCorporal setId()                       Sets the current record's "id" value
 * @method Funcionarios_InformacionCorporal setFuncionarioId()            Sets the current record's "funcionario_id" value
 * @method Funcionarios_InformacionCorporal setColorOjos()                Sets the current record's "color_ojos" value
 * @method Funcionarios_InformacionCorporal setColorCabello()             Sets the current record's "color_cabello" value
 * @method Funcionarios_InformacionCorporal setColorPiel()                Sets the current record's "color_piel" value
 * @method Funcionarios_InformacionCorporal setPeso()                     Sets the current record's "peso" value
 * @method Funcionarios_InformacionCorporal setAltura()                   Sets the current record's "altura" value
 * @method Funcionarios_InformacionCorporal setTallaCamisa()              Sets the current record's "talla_camisa" value
 * @method Funcionarios_InformacionCorporal setTallaPantalon()            Sets the current record's "talla_pantalon" value
 * @method Funcionarios_InformacionCorporal setTallaCalzado()             Sets the current record's "talla_calzado" value
 * @method Funcionarios_InformacionCorporal setTallaGorra()               Sets the current record's "talla_gorra" value
 * @method Funcionarios_InformacionCorporal setTipoSangre()               Sets the current record's "tipo_sangre" value
 * @method Funcionarios_InformacionCorporal setLentesFormula()            Sets the current record's "lentes_formula" value
 * @method Funcionarios_InformacionCorporal setFValidado()                Sets the current record's "f_validado" value
 * @method Funcionarios_InformacionCorporal setIdValidado()               Sets the current record's "id_validado" value
 * @method Funcionarios_InformacionCorporal setStatus()                   Sets the current record's "status" value
 * @method Funcionarios_InformacionCorporal setIdUpdate()                 Sets the current record's "id_update" value
 * @method Funcionarios_InformacionCorporal setIpUpdate()                 Sets the current record's "ip_update" value
 * @method Funcionarios_InformacionCorporal setProteccion()               Sets the current record's "proteccion" value
 * @method Funcionarios_InformacionCorporal setFuncionariosFuncionario()  Sets the current record's "Funcionarios_Funcionario" value
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFuncionarios_InformacionCorporal extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('funcionarios.informacion_corporal');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'funcionarios.informacion_corporal_id',
             'length' => 4,
             ));
        $this->hasColumn('funcionario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('color_ojos', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 30,
             ));
        $this->hasColumn('color_cabello', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 30,
             ));
        $this->hasColumn('color_piel', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 30,
             ));
        $this->hasColumn('peso', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('altura', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('talla_camisa', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('talla_pantalon', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('talla_calzado', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('talla_gorra', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('tipo_sangre', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 50,
             ));
        $this->hasColumn('lentes_formula', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('f_validado', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_validado', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('ip_update', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 40,
             ));
        $this->hasColumn('proteccion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Funcionarios_Funcionario', array(
             'local' => 'funcionario_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}