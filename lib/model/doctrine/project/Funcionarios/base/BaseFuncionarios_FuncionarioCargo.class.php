<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Funcionarios_FuncionarioCargo', 'doctrine');

/**
 * BaseFuncionarios_FuncionarioCargo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cargo_id
 * @property integer $funcionario_id
 * @property date $f_ingreso
 * @property string $observaciones
 * @property integer $funcionario_cargo_condicion_id
 * @property date $f_retiro
 * @property string $motivo_retiro
 * @property string $status
 * @property integer $id_update
 * @property Funcionarios_Funcionario $Funcionarios_Funcionario
 * @property Organigrama_Cargo $Organigrama_Cargo
 * @property Funcionarios_FuncionarioCargoCondicion $Funcionarios_FuncionarioCargoCondicion
 * @property Doctrine_Collection $Correspondencia_FuncionarioCargoEmisor
 * @property Doctrine_Collection $Correspondencia_FuncionarioCargoDelegado
 * @property Doctrine_Collection $Funcionarios_FuncionarioCargoCertificado
 * 
 * @method integer                                getId()                                       Returns the current record's "id" value
 * @method integer                                getCargoId()                                  Returns the current record's "cargo_id" value
 * @method integer                                getFuncionarioId()                            Returns the current record's "funcionario_id" value
 * @method date                                   getFIngreso()                                 Returns the current record's "f_ingreso" value
 * @method string                                 getObservaciones()                            Returns the current record's "observaciones" value
 * @method integer                                getFuncionarioCargoCondicionId()              Returns the current record's "funcionario_cargo_condicion_id" value
 * @method date                                   getFRetiro()                                  Returns the current record's "f_retiro" value
 * @method string                                 getMotivoRetiro()                             Returns the current record's "motivo_retiro" value
 * @method string                                 getStatus()                                   Returns the current record's "status" value
 * @method integer                                getIdUpdate()                                 Returns the current record's "id_update" value
 * @method Funcionarios_Funcionario               getFuncionariosFuncionario()                  Returns the current record's "Funcionarios_Funcionario" value
 * @method Organigrama_Cargo                      getOrganigramaCargo()                         Returns the current record's "Organigrama_Cargo" value
 * @method Funcionarios_FuncionarioCargoCondicion getFuncionariosFuncionarioCargoCondicion()    Returns the current record's "Funcionarios_FuncionarioCargoCondicion" value
 * @method Doctrine_Collection                    getCorrespondenciaFuncionarioCargoEmisor()    Returns the current record's "Correspondencia_FuncionarioCargoEmisor" collection
 * @method Doctrine_Collection                    getCorrespondenciaFuncionarioCargoDelegado()  Returns the current record's "Correspondencia_FuncionarioCargoDelegado" collection
 * @method Doctrine_Collection                    getFuncionariosFuncionarioCargoCertificado()  Returns the current record's "Funcionarios_FuncionarioCargoCertificado" collection
 * @method Funcionarios_FuncionarioCargo          setId()                                       Sets the current record's "id" value
 * @method Funcionarios_FuncionarioCargo          setCargoId()                                  Sets the current record's "cargo_id" value
 * @method Funcionarios_FuncionarioCargo          setFuncionarioId()                            Sets the current record's "funcionario_id" value
 * @method Funcionarios_FuncionarioCargo          setFIngreso()                                 Sets the current record's "f_ingreso" value
 * @method Funcionarios_FuncionarioCargo          setObservaciones()                            Sets the current record's "observaciones" value
 * @method Funcionarios_FuncionarioCargo          setFuncionarioCargoCondicionId()              Sets the current record's "funcionario_cargo_condicion_id" value
 * @method Funcionarios_FuncionarioCargo          setFRetiro()                                  Sets the current record's "f_retiro" value
 * @method Funcionarios_FuncionarioCargo          setMotivoRetiro()                             Sets the current record's "motivo_retiro" value
 * @method Funcionarios_FuncionarioCargo          setStatus()                                   Sets the current record's "status" value
 * @method Funcionarios_FuncionarioCargo          setIdUpdate()                                 Sets the current record's "id_update" value
 * @method Funcionarios_FuncionarioCargo          setFuncionariosFuncionario()                  Sets the current record's "Funcionarios_Funcionario" value
 * @method Funcionarios_FuncionarioCargo          setOrganigramaCargo()                         Sets the current record's "Organigrama_Cargo" value
 * @method Funcionarios_FuncionarioCargo          setFuncionariosFuncionarioCargoCondicion()    Sets the current record's "Funcionarios_FuncionarioCargoCondicion" value
 * @method Funcionarios_FuncionarioCargo          setCorrespondenciaFuncionarioCargoEmisor()    Sets the current record's "Correspondencia_FuncionarioCargoEmisor" collection
 * @method Funcionarios_FuncionarioCargo          setCorrespondenciaFuncionarioCargoDelegado()  Sets the current record's "Correspondencia_FuncionarioCargoDelegado" collection
 * @method Funcionarios_FuncionarioCargo          setFuncionariosFuncionarioCargoCertificado()  Sets the current record's "Funcionarios_FuncionarioCargoCertificado" collection
 * 
 * @package    siglas
 * @subpackage model
 * @author     Livio Lopez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFuncionarios_FuncionarioCargo extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('funcionarios.funcionario_cargo');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'funcionarios.funcionario_cargo_id',
             'length' => 4,
             ));
        $this->hasColumn('cargo_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('funcionario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('f_ingreso', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('observaciones', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('funcionario_cargo_condicion_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('f_retiro', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('motivo_retiro', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('id_update', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Funcionarios_Funcionario', array(
             'local' => 'funcionario_id',
             'foreign' => 'id'));

        $this->hasOne('Organigrama_Cargo', array(
             'local' => 'cargo_id',
             'foreign' => 'id'));

        $this->hasOne('Funcionarios_FuncionarioCargoCondicion', array(
             'local' => 'funcionario_cargo_condicion_id',
             'foreign' => 'id'));

        $this->hasMany('Correspondencia_FuncionarioEmisor as Correspondencia_FuncionarioCargoEmisor', array(
             'local' => 'id',
             'foreign' => 'funcionario_cargo_id'));

        $this->hasMany('Correspondencia_FuncionarioEmisor as Correspondencia_FuncionarioCargoDelegado', array(
             'local' => 'id',
             'foreign' => 'funcionario_delegado_cargo_id'));

        $this->hasMany('Funcionarios_FuncionarioCargoCertificado', array(
             'local' => 'id',
             'foreign' => 'funcionario_cargo_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}